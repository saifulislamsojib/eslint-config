import restrictedGlobals from './restricted-globals.js';

export default {
  'no-shadow': 'error',
  'no-use-before-define': 'error',
  'no-await-in-loop': 'error',
  'no-console': ['warn', { allow: ['warn', 'error'] }],
  'no-inner-declarations': ['error', 'both'],
  'no-promise-executor-return': 'error',
  'no-template-curly-in-string': 'error',
  'no-unreachable-loop': 'error',
  'no-object-constructor': 'error',
  'no-array-constructor': 'error',
  'no-bitwise': 'error',
  'no-lonely-if': 'error',
  'no-nested-ternary': 'error',
  'no-restricted-syntax': ['error', 'WithStatement'],
  'no-unneeded-ternary': ['error', { defaultAssignment: false }],
  'no-useless-computed-key': 'error',
  'no-useless-constructor': 'error',
  'no-useless-rename': 'error',
  'no-useless-concat': 'error',
  'no-useless-return': 'error',
  'no-var': 'error',
  'no-caller': 'error',
  'no-empty-function': 'error',
  'no-else-return': ['error', { allowElseIf: false }],
  'no-eval': 'error',
  'no-extend-native': 'error',
  'no-extra-bind': 'error',
  'no-implied-eval': 'error',
  'no-iterator': 'error',
  'no-labels': 'error',
  'no-lone-blocks': 'error',
  'no-loop-func': 'error',
  'no-multi-str': 'error',
  'no-new': 'error',
  'no-new-func': 'error',
  'no-new-wrappers': 'error',
  'no-proto': 'error',
  'no-self-compare': 'error',
  'no-sequences': 'error',
  'no-throw-literal': 'error',
  'no-return-assign': ['error', 'always'],
  'symbol-description': 'error',
  'object-shorthand': 'error',
  'prefer-object-spread': 'error',
  'prefer-rest-params': 'error',
  'prefer-spread': 'error',
  'prefer-template': 'error',
  'prefer-exponentiation-operator': 'error',
  'prefer-object-has-own': 'error',
  'prefer-numeric-literals': 'error',
  'prefer-const': 'error',
  'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }],
  'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
  'prefer-destructuring': [
    'error',
    {
      VariableDeclarator: { object: true },
      AssignmentExpression: { array: true },
    },
  ],
  eqeqeq: ['error', 'always', { null: 'ignore' }],
  'default-case': ['error', { commentPattern: '^no default$' }],
  'default-case-last': 'error',
  'default-param-last': 'error',
  'consistent-return': 'error',
  'dot-notation': 'error',
  'class-methods-use-this': 'error',
  'block-scoped-var': 'error',
  'func-style': [
    'error',
    'declaration',
    { allowArrowFunctions: true, allowTypeAnnotation: true },
  ],
  'no-restricted-globals': restrictedGlobals,
  'no-restricted-properties': [
    'error',
    {
      property: '__defineGetter__',
      message: 'Please use Object.defineProperty instead.',
    },
    {
      property: '__defineSetter__',
      message: 'Please use Object.defineProperty instead.',
    },
  ],
};
